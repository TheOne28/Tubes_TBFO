VAR -> [['__var__'], ['VAR_NONTERMINAL_1', 'VAR']]
NUM -> [['__num__']]
STR -> [['__str__']]
BOOL -> [['True'], ['False']]
PLUS -> [['+']]
MINUS -> [['-']]
MULL -> [['*']]
ROUND_DIV -> [['DIV', 'DIV']]
MOD -> [['%']]
DIV -> [['/']]
POW -> [['**']]
ASSIGN -> [['=']]
OPEN_BRACKET -> [['(']]
CLOSE_BRACKET -> [[')']]
OPEN_SQUARE_BRACKET -> [['[']]
CLOSE_SQUARE_BRACKET -> [[']']]
OPEN_CURLY_BRACKET -> [['{']]
CLOSE_CURLY_BRACKET -> [['}']]
OPEN_ANGEL_BRACKET -> [['<']]
CLOSE_ANGEL_BRACKET -> [['>']]
COLON -> [[':']]
DOT -> [['.']]
COMMA -> [[',']]
NEGATION -> [['!']]
AND -> [['and']]
OR -> [['or']]
NOT -> [['not']]
IF -> [['if']]
ELIF -> [['elif']]
ELSE -> [['else']]
FOR -> [['for']]
IN -> [['in']]
RANGE -> [['range']]
WHILE -> [['while']]
NONE -> [['none']]
WITH -> [['with']]
DEF -> [['def']]
AS -> [['as']]
CONTINUE -> [['continue']]
BREAK -> [['break']]
PASS -> [['pass']]
CLASS -> [['class']]
RETURN -> [['return']]
IMPORT -> [['import']]
FROM -> [['from']]
IS -> [['is']]
OPERATOR -> [['OPEN_ANGEL_BRACKET', 'ASSIGN'], ['CLOSE_ANGEL_BRACKET', 'ASSIGN'], ['ASSIGN', 'ASSIGN'], ['NEGATION', 'ASSIGN'], ['+'], ['-'], ['*'], ['DIV', 'DIV'], ['%'], ['/'], ['**'], ['and'], ['not'], ['or'], ['<'], ['>'], ['is']]
VARS -> [['VARS_NONTERMINAL_1', 'VARS'], ['__var__'], ['VARS_NONTERMINAL_2', 'VAR']]
FUNCTION_NAME -> [['FUNCTION_NAME_NONTERMINAL_2', 'CLOSE_BRACKET'], ['FUNCTION_NAME_NONTERMINAL_3', 'CLOSE_BRACKET']]
NEWLINE -> [['\n']]
BASIC_EXP -> [['__num__'], ['__str__'], ['True'], ['False']]
OMNI_EXP -> [['OMNI_EXP_NONTERMINAL_1', 'CLOSE_BRACKET'], ['CASTER', 'OMNI_EXP'], ['OMNI_EXP_NONTERMINAL_2', 'OMNI_EXP'], ['VAR', 'FUNCTION_CALL'], ['BASIC_EXP', 'FUNCTION_CALL'], ['OMNI_EXP', 'TERNARY_OPERATOR'], ['__num__'], ['__str__'], ['True'], ['False'], ['__var__'], ['OMNI_EXP_NONTERMINAL_3', 'VAR'], ['OPEN_BRACKET', 'CLOSE_BRACKET'], ['OMNI_EXP_NONTERMINAL_4', 'CLOSE_BRACKET'], ['OPEN_SQUARE_BRACKET', 'CLOSE_SQUARE_BRACKET'], ['OMNI_EXP_NONTERMINAL_5', 'CLOSE_SQUARE_BRACKET'], ['OMNI_EXP_NONTERMINAL_6', 'CLOSE_CURLY_BRACKET'], ['OMNI_EXP_NONTERMINAL_8', 'CLOSE_BRACKET'], ['OMNI_EXP_NONTERMINAL_9', 'CLOSE_BRACKET']]
MULTI_OMNI_EXP -> [['MULTI_OMNI_EXP_NONTERMINAL_1', 'MULTI_OMNI_EXP'], ['MULTI_OMNI_EXP_NONTERMINAL_2', 'CLOSE_BRACKET'], ['CASTER', 'OMNI_EXP'], ['MULTI_OMNI_EXP_NONTERMINAL_3', 'OMNI_EXP'], ['VAR', 'FUNCTION_CALL'], ['BASIC_EXP', 'FUNCTION_CALL'], ['OMNI_EXP', 'TERNARY_OPERATOR'], ['__num__'], ['__str__'], ['True'], ['False'], ['__var__'], ['MULTI_OMNI_EXP_NONTERMINAL_4', 'VAR'], ['OPEN_BRACKET', 'CLOSE_BRACKET'], ['MULTI_OMNI_EXP_NONTERMINAL_5', 'CLOSE_BRACKET'], ['OPEN_SQUARE_BRACKET', 'CLOSE_SQUARE_BRACKET'], ['MULTI_OMNI_EXP_NONTERMINAL_6', 'CLOSE_SQUARE_BRACKET'], ['MULTI_OMNI_EXP_NONTERMINAL_7', 'CLOSE_CURLY_BRACKET'], ['MULTI_OMNI_EXP_NONTERMINAL_9', 'CLOSE_BRACKET'], ['MULTI_OMNI_EXP_NONTERMINAL_10', 'CLOSE_BRACKET']]
LIST_EXP -> [['OPEN_SQUARE_BRACKET', 'CLOSE_SQUARE_BRACKET'], ['LIST_EXP_NONTERMINAL_1', 'CLOSE_SQUARE_BRACKET']]
TUPLE_EXP -> [['OPEN_BRACKET', 'CLOSE_BRACKET'], ['TUPLE_EXP_NONTERMINAL_1', 'CLOSE_BRACKET']]
DICT_ELMT -> [['DICT_ELMT_NONTERMINAL_1', 'OMNI_EXP'], ['DICT_ELMT_NONTERMINAL_2', 'DICT_ELMT']]
DICT_EXP -> [['DICT_EXP_NONTERMINAL_1', 'CLOSE_CURLY_BRACKET']]
IMPORT_EXP -> [['IMPORT_EXP_NONTERMINAL_1', 'VARS'], ['IMPORT_EXP_NONTERMINAL_2', 'VARS'], ['__var__'], ['IMPORT_EXP_NONTERMINAL_3', 'VAR']]
FUNCTION_CALL -> [['DOT', 'FUNCTION_NAME'], ['FUNCTION_CALL_NONTERMINAL_1', 'FUNCTION_CALL'], ['DOT', 'VAR'], ['FUNCTION_CALL_NONTERMINAL_2', 'FUNCTION_CALL']]
IMPORT_STMT -> [['IMPORT_STMT_NONTERMINAL_1', 'NEWLINE'], ['IMPORT_STMT_NONTERMINAL_4', 'NEWLINE'], ['IMPORT_STMT_NONTERMINAL_6', 'MULL']]
STATEMENT -> [['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['STATEMENT_NONTERMINAL_1', 'NEWLINE']]
MULTI_STATEMENT -> [['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['MULTI_STATEMENT_NONTERMINAL_1', 'NEWLINE']]
PASS_STATEMENT -> [['PASS', 'NEWLINE']]
RAISE_STATEMENT -> [['RAISE_STATEMENT_NONTERMINAL_1', 'NEWLINE']]
IF_BLOCK -> [['IF_HEADER', 'STATEMENT'], ['IF_BLOCK_NONTERMINAL_1', 'IF_BODY']]
IF_HEADER -> [['IF_HEADER_NONTERMINAL_1', 'COLON']]
IF_BODY -> [['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['IF_BODY_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['IF_BODY_NONTERMINAL_3', 'ELSE_BLOCK'], ['FUNC_HEADER', 'STATEMENT'], ['IF_BODY_NONTERMINAL_4', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['IF_BODY_NONTERMINAL_5', 'NEWLINE'], ['IF_BODY_NONTERMINAL_8', 'NEWLINE'], ['IF_BODY_NONTERMINAL_10', 'MULL'], ['IF_HEADER', 'STATEMENT'], ['IF_BODY_NONTERMINAL_11', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['IF_BODY_NONTERMINAL_12', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY']]
ELIF_BLOCK -> [['ELIF_HEADER', 'STATEMENT'], ['ELIF_BLOCK_NONTERMINAL_1', 'IF_BODY'], ['ELIF_BLOCK_NONTERMINAL_2', 'ELIF_BLOCK'], ['ELIF_BLOCK_NONTERMINAL_4', 'ELIF_BLOCK']]
ELIF_HEADER -> [['ELIF_HEADER_NONTERMINAL_1', 'COLON']]
ELSE_BLOCK -> [['ELSE_HEADER', 'STATEMENT'], ['ELSE_BLOCK_NONTERMINAL_1', 'IF_BODY']]
ELSE_HEADER -> [['ELSE', 'COLON']]
TERNARY_OPERATOR -> [['TERNARY_OPERATOR_NONTERMINAL_2', 'OMNI_EXP']]
CONDITIONAL_BLOCK -> [['IF_BLOCK', 'ELIF_BLOCK'], ['CONDITIONAL_BLOCK_NONTERMINAL_2', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['CONDITIONAL_BLOCK_NONTERMINAL_3', 'IF_BODY']]
LOOP_BLOCK -> [['FOR_HEADER', 'STATEMENT'], ['LOOP_BLOCK_NONTERMINAL_1', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY']]
FOR_BLOCK -> [['FOR_HEADER', 'STATEMENT'], ['FOR_BLOCK_NONTERMINAL_1', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK']]
FOR_HEADER -> [['FOR_HEADER_NONTERMINAL_3', 'COLON']]
FOR_BODY -> [['BREAKCON_STMT', 'FOR_BODY'], ['BLOCK_PROGRAM', 'FOR_BODY'], ['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['BREAK', 'NEWLINE'], ['CONTINUE', 'NEWLINE'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['FOR_BODY_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['FOR_BODY_NONTERMINAL_3', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['FOR_BODY_NONTERMINAL_4', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['FOR_BODY_NONTERMINAL_5', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY'], ['FUNC_HEADER', 'STATEMENT'], ['FOR_BODY_NONTERMINAL_6', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['FOR_BODY_NONTERMINAL_7', 'NEWLINE'], ['FOR_BODY_NONTERMINAL_10', 'NEWLINE'], ['FOR_BODY_NONTERMINAL_12', 'MULL']]
WHILE_BLOCK -> [['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY']]
WHILE_HEADER -> [['WHILE_HEADER_NONTERMINAL_1', 'COLON']]
WHILE_BODY -> [['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['WHILE_BODY_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['WHILE_BODY_NONTERMINAL_3', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['WHILE_BODY_NONTERMINAL_4', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['WHILE_BODY_NONTERMINAL_5', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY'], ['FUNC_HEADER', 'STATEMENT'], ['WHILE_BODY_NONTERMINAL_6', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['WHILE_BODY_NONTERMINAL_7', 'NEWLINE'], ['WHILE_BODY_NONTERMINAL_10', 'NEWLINE'], ['WHILE_BODY_NONTERMINAL_12', 'MULL']]
BREAKCON_STMT -> [['BREAK', 'NEWLINE'], ['CONTINUE', 'NEWLINE']]
FUNC_BLOCK -> [['FUNC_HEADER', 'STATEMENT'], ['FUNC_BLOCK_NONTERMINAL_1', 'FUNC_BODY']]
FUNC_HEADER -> [['FUNC_HEADER_NONTERMINAL_2', 'CLOSE_BRACKET'], ['FUNC_HEADER_NONTERMINAL_5', 'CLOSE_BRACKET']]
FUNC_BODY -> [['RETURN_STMT', 'BLOCK_PROGRAM'], ['BLOCK_PROGRAM', 'RETURN_STMT'], ['RETURN', 'OMNI_EXP'], ['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['return'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['FUNC_BODY_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['FUNC_BODY_NONTERMINAL_3', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['FUNC_BODY_NONTERMINAL_4', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['FUNC_BODY_NONTERMINAL_5', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY'], ['FUNC_HEADER', 'STATEMENT'], ['FUNC_BODY_NONTERMINAL_6', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['FUNC_BODY_NONTERMINAL_7', 'NEWLINE'], ['FUNC_BODY_NONTERMINAL_10', 'NEWLINE'], ['FUNC_BODY_NONTERMINAL_12', 'MULL']]
BLOCK_PROGRAM_WITH_RETURN -> [['RETURN_STMT', 'BLOCK_PROGRAM'], ['BLOCK_PROGRAM', 'RETURN_STMT'], ['RETURN', 'OMNI_EXP'], ['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['return'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_3', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_4', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_5', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY'], ['FUNC_HEADER', 'STATEMENT'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_6', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_7', 'NEWLINE'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_10', 'NEWLINE'], ['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_12', 'MULL']]
RETURN_STMT -> [['RETURN', 'OMNI_EXP'], ['return']]
ARGS -> [['ARGS_NONTERMINAL_1', 'OMNI_EXP'], ['ARGS_NONTERMINAL_2', 'ARGS'], ['ARGS_NONTERMINAL_5', 'ARGS'], ['__var__'], ['ARGS_NONTERMINAL_6', 'VAR']]
CLASS_BLOCK -> [['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY']]
CLASS_HEADER -> [['CLASS_HEADER_NONTERMINAL_1', 'COLON'], ['CLASS_HEADER_NONTERMINAL_4', 'COLON'], ['CLASS_HEADER_NONTERMINAL_7', 'CLOSE_BRACKET']]
CLASS_BODY -> [['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['CLASS_BODY_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['CLASS_BODY_NONTERMINAL_3', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['CLASS_BODY_NONTERMINAL_4', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['CLASS_BODY_NONTERMINAL_5', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY'], ['FUNC_HEADER', 'STATEMENT'], ['CLASS_BODY_NONTERMINAL_6', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['CLASS_BODY_NONTERMINAL_7', 'NEWLINE'], ['CLASS_BODY_NONTERMINAL_10', 'NEWLINE'], ['CLASS_BODY_NONTERMINAL_12', 'MULL']]
S -> [['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['S_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['S_NONTERMINAL_3', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['S_NONTERMINAL_4', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['S_NONTERMINAL_5', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY'], ['FUNC_HEADER', 'STATEMENT'], ['S_NONTERMINAL_6', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['S_NONTERMINAL_7', 'NEWLINE'], ['S_NONTERMINAL_10', 'NEWLINE'], ['S_NONTERMINAL_12', 'MULL']]
BLOCK_PROGRAM -> [['MULTI_STATEMENT', 'BLOCK_PROGRAM'], ['CONDITIONAL_BLOCK', 'BLOCK_PROGRAM'], ['LOOP_BLOCK', 'BLOCK_PROGRAM'], ['FUNC_BLOCK', 'BLOCK_PROGRAM'], ['CLASS_BLOCK', 'BLOCK_PROGRAM'], ['IMPORT_STMT', 'BLOCK_PROGRAM'], ['STATEMENT', 'MULTI_STATEMENT'], ['OMNI_EXP', 'NEWLINE'], ['PASS', 'NEWLINE'], ['BLOCK_PROGRAM_NONTERMINAL_1', 'NEWLINE'], ['IF_BLOCK', 'ELIF_BLOCK'], ['BLOCK_PROGRAM_NONTERMINAL_3', 'ELSE_BLOCK'], ['IF_HEADER', 'STATEMENT'], ['BLOCK_PROGRAM_NONTERMINAL_4', 'IF_BODY'], ['FOR_HEADER', 'STATEMENT'], ['BLOCK_PROGRAM_NONTERMINAL_5', 'FOR_BODY'], ['FOR_BLOCK', 'ELSE_BLOCK'], ['WHILE_HEADER', 'STATEMENT'], ['WHILE_HEADER', 'WHILE_BODY'], ['FUNC_HEADER', 'STATEMENT'], ['BLOCK_PROGRAM_NONTERMINAL_6', 'FUNC_BODY'], ['CLASS_HEADER', 'STATEMENT'], ['CLASS_HEADER', 'CLASS_BODY'], ['BLOCK_PROGRAM_NONTERMINAL_7', 'NEWLINE'], ['BLOCK_PROGRAM_NONTERMINAL_10', 'NEWLINE'], ['BLOCK_PROGRAM_NONTERMINAL_12', 'MULL']]
VAR_NONTERMINAL_1 -> [['VAR', 'DOT']]
VARS_NONTERMINAL_1 -> [['VAR', 'COMMA']]
VARS_NONTERMINAL_2 -> [['VAR', 'DOT']]
FUNCTION_NAME_NONTERMINAL_1 -> [['VAR', 'OPEN_BRACKET']]
FUNCTION_NAME_NONTERMINAL_2 -> [['FUNCTION_NAME_NONTERMINAL_1', 'MULTI_OMNI_EXP']]
FUNCTION_NAME_NONTERMINAL_3 -> [['VAR', 'OPEN_BRACKET']]
OMNI_EXP_NONTERMINAL_1 -> [['OPEN_BRACKET', 'OMNI_EXP']]
OMNI_EXP_NONTERMINAL_2 -> [['OMNI_EXP', 'OPERATOR']]
OMNI_EXP_NONTERMINAL_3 -> [['VAR', 'DOT']]
OMNI_EXP_NONTERMINAL_4 -> [['OPEN_BRACKET', 'MULTI_OMNI_EXP']]
OMNI_EXP_NONTERMINAL_5 -> [['OPEN_SQUARE_BRACKET', 'MULTI_OMNI_EXP']]
OMNI_EXP_NONTERMINAL_6 -> [['OPEN_CURLY_BRACKET', 'DICT_ELMT']]
OMNI_EXP_NONTERMINAL_7 -> [['VAR', 'OPEN_BRACKET']]
OMNI_EXP_NONTERMINAL_8 -> [['OMNI_EXP_NONTERMINAL_7', 'MULTI_OMNI_EXP']]
OMNI_EXP_NONTERMINAL_9 -> [['VAR', 'OPEN_BRACKET']]
MULTI_OMNI_EXP_NONTERMINAL_1 -> [['OMNI_EXP', 'COMMA']]
MULTI_OMNI_EXP_NONTERMINAL_2 -> [['OPEN_BRACKET', 'OMNI_EXP']]
MULTI_OMNI_EXP_NONTERMINAL_3 -> [['OMNI_EXP', 'OPERATOR']]
MULTI_OMNI_EXP_NONTERMINAL_4 -> [['VAR', 'DOT']]
MULTI_OMNI_EXP_NONTERMINAL_5 -> [['OPEN_BRACKET', 'MULTI_OMNI_EXP']]
MULTI_OMNI_EXP_NONTERMINAL_6 -> [['OPEN_SQUARE_BRACKET', 'MULTI_OMNI_EXP']]
MULTI_OMNI_EXP_NONTERMINAL_7 -> [['OPEN_CURLY_BRACKET', 'DICT_ELMT']]
MULTI_OMNI_EXP_NONTERMINAL_8 -> [['VAR', 'OPEN_BRACKET']]
MULTI_OMNI_EXP_NONTERMINAL_9 -> [['MULTI_OMNI_EXP_NONTERMINAL_8', 'MULTI_OMNI_EXP']]
MULTI_OMNI_EXP_NONTERMINAL_10 -> [['VAR', 'OPEN_BRACKET']]
LIST_EXP_NONTERMINAL_1 -> [['OPEN_SQUARE_BRACKET', 'MULTI_OMNI_EXP']]
TUPLE_EXP_NONTERMINAL_1 -> [['OPEN_BRACKET', 'MULTI_OMNI_EXP']]
DICT_ELMT_NONTERMINAL_1 -> [['OMNI_EXP', 'COLON']]
DICT_ELMT_NONTERMINAL_2 -> [['DICT_ELMT', 'COMMA']]
DICT_EXP_NONTERMINAL_1 -> [['OPEN_CURLY_BRACKET', 'DICT_ELMT']]
IMPORT_EXP_NONTERMINAL_1 -> [['VARS', 'AS']]
IMPORT_EXP_NONTERMINAL_2 -> [['VAR', 'COMMA']]
IMPORT_EXP_NONTERMINAL_3 -> [['VAR', 'DOT']]
FUNCTION_CALL_NONTERMINAL_1 -> [['DOT', 'FUNCTION_NAME']]
FUNCTION_CALL_NONTERMINAL_2 -> [['DOT', 'VAR']]
IMPORT_STMT_NONTERMINAL_1 -> [['IMPORT', 'IMPORT_EXP']]
IMPORT_STMT_NONTERMINAL_2 -> [['FROM', 'VAR']]
IMPORT_STMT_NONTERMINAL_3 -> [['IMPORT_STMT_NONTERMINAL_2', 'IMPORT']]
IMPORT_STMT_NONTERMINAL_4 -> [['IMPORT_STMT_NONTERMINAL_3', 'IMPORT_EXP']]
IMPORT_STMT_NONTERMINAL_5 -> [['FROM', 'VAR']]
IMPORT_STMT_NONTERMINAL_6 -> [['IMPORT_STMT_NONTERMINAL_5', 'IMPORT']]
STATEMENT_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
MULTI_STATEMENT_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
RAISE_STATEMENT_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
IF_BLOCK_NONTERMINAL_1 -> [['IF_HEADER', 'NEWLINE']]
IF_HEADER_NONTERMINAL_1 -> [['IF', 'OMNI_EXP']]
IF_BODY_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
IF_BODY_NONTERMINAL_2 -> [['IF', 'BLOCK']]
IF_BODY_NONTERMINAL_3 -> [['IF_BODY_NONTERMINAL_2', 'ELIF_BLOCK']]
IF_BODY_NONTERMINAL_4 -> [['FUNC_HEADER', 'NEWLINE']]
IF_BODY_NONTERMINAL_5 -> [['IMPORT', 'IMPORT_EXP']]
IF_BODY_NONTERMINAL_6 -> [['FROM', 'VAR']]
IF_BODY_NONTERMINAL_7 -> [['IF_BODY_NONTERMINAL_6', 'IMPORT']]
IF_BODY_NONTERMINAL_8 -> [['IF_BODY_NONTERMINAL_7', 'IMPORT_EXP']]
IF_BODY_NONTERMINAL_9 -> [['FROM', 'VAR']]
IF_BODY_NONTERMINAL_10 -> [['IF_BODY_NONTERMINAL_9', 'IMPORT']]
IF_BODY_NONTERMINAL_11 -> [['IF_HEADER', 'NEWLINE']]
IF_BODY_NONTERMINAL_12 -> [['FOR_HEADER', 'NEWLINE']]
ELIF_BLOCK_NONTERMINAL_1 -> [['ELIF_HEADER', 'NEWLINE']]
ELIF_BLOCK_NONTERMINAL_2 -> [['ELIF_HEADER', 'IF_BODY']]
ELIF_BLOCK_NONTERMINAL_3 -> [['ELIF_HEADER', 'NEWLINE']]
ELIF_BLOCK_NONTERMINAL_4 -> [['ELIF_BLOCK_NONTERMINAL_3', 'IF_BODY']]
ELIF_HEADER_NONTERMINAL_1 -> [['ELIF', 'OMNI_EXP']]
ELSE_BLOCK_NONTERMINAL_1 -> [['ELSE_HEADER', 'NEWLINE']]
TERNARY_OPERATOR_NONTERMINAL_1 -> [['IF', 'OMNI_EXP']]
TERNARY_OPERATOR_NONTERMINAL_2 -> [['TERNARY_OPERATOR_NONTERMINAL_1', 'ELSE']]
CONDITIONAL_BLOCK_NONTERMINAL_1 -> [['IF', 'BLOCK']]
CONDITIONAL_BLOCK_NONTERMINAL_2 -> [['CONDITIONAL_BLOCK_NONTERMINAL_1', 'ELIF_BLOCK']]
CONDITIONAL_BLOCK_NONTERMINAL_3 -> [['IF_HEADER', 'NEWLINE']]
LOOP_BLOCK_NONTERMINAL_1 -> [['FOR_HEADER', 'NEWLINE']]
FOR_BLOCK_NONTERMINAL_1 -> [['FOR_HEADER', 'NEWLINE']]
FOR_HEADER_NONTERMINAL_1 -> [['FOR', 'VAR']]
FOR_HEADER_NONTERMINAL_2 -> [['FOR_HEADER_NONTERMINAL_1', 'IN']]
FOR_HEADER_NONTERMINAL_3 -> [['FOR_HEADER_NONTERMINAL_2', 'OMNI_EXP']]
FOR_BODY_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
FOR_BODY_NONTERMINAL_2 -> [['IF', 'BLOCK']]
FOR_BODY_NONTERMINAL_3 -> [['FOR_BODY_NONTERMINAL_2', 'ELIF_BLOCK']]
FOR_BODY_NONTERMINAL_4 -> [['IF_HEADER', 'NEWLINE']]
FOR_BODY_NONTERMINAL_5 -> [['FOR_HEADER', 'NEWLINE']]
FOR_BODY_NONTERMINAL_6 -> [['FUNC_HEADER', 'NEWLINE']]
FOR_BODY_NONTERMINAL_7 -> [['IMPORT', 'IMPORT_EXP']]
FOR_BODY_NONTERMINAL_8 -> [['FROM', 'VAR']]
FOR_BODY_NONTERMINAL_9 -> [['FOR_BODY_NONTERMINAL_8', 'IMPORT']]
FOR_BODY_NONTERMINAL_10 -> [['FOR_BODY_NONTERMINAL_9', 'IMPORT_EXP']]
FOR_BODY_NONTERMINAL_11 -> [['FROM', 'VAR']]
FOR_BODY_NONTERMINAL_12 -> [['FOR_BODY_NONTERMINAL_11', 'IMPORT']]
WHILE_HEADER_NONTERMINAL_1 -> [['WHILE', 'OMNI_EXP']]
WHILE_BODY_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
WHILE_BODY_NONTERMINAL_2 -> [['IF', 'BLOCK']]
WHILE_BODY_NONTERMINAL_3 -> [['WHILE_BODY_NONTERMINAL_2', 'ELIF_BLOCK']]
WHILE_BODY_NONTERMINAL_4 -> [['IF_HEADER', 'NEWLINE']]
WHILE_BODY_NONTERMINAL_5 -> [['FOR_HEADER', 'NEWLINE']]
WHILE_BODY_NONTERMINAL_6 -> [['FUNC_HEADER', 'NEWLINE']]
WHILE_BODY_NONTERMINAL_7 -> [['IMPORT', 'IMPORT_EXP']]
WHILE_BODY_NONTERMINAL_8 -> [['FROM', 'VAR']]
WHILE_BODY_NONTERMINAL_9 -> [['WHILE_BODY_NONTERMINAL_8', 'IMPORT']]
WHILE_BODY_NONTERMINAL_10 -> [['WHILE_BODY_NONTERMINAL_9', 'IMPORT_EXP']]
WHILE_BODY_NONTERMINAL_11 -> [['FROM', 'VAR']]
WHILE_BODY_NONTERMINAL_12 -> [['WHILE_BODY_NONTERMINAL_11', 'IMPORT']]
FUNC_BLOCK_NONTERMINAL_1 -> [['FUNC_HEADER', 'NEWLINE']]
FUNC_HEADER_NONTERMINAL_1 -> [['DEF', 'VAR']]
FUNC_HEADER_NONTERMINAL_2 -> [['FUNC_HEADER_NONTERMINAL_1', 'OPEN_BRACKET']]
FUNC_HEADER_NONTERMINAL_3 -> [['DEF', 'VAR']]
FUNC_HEADER_NONTERMINAL_4 -> [['FUNC_HEADER_NONTERMINAL_3', 'OPEN_BRACKET']]
FUNC_HEADER_NONTERMINAL_5 -> [['FUNC_HEADER_NONTERMINAL_4', 'ARGS']]
FUNC_BODY_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
FUNC_BODY_NONTERMINAL_2 -> [['IF', 'BLOCK']]
FUNC_BODY_NONTERMINAL_3 -> [['FUNC_BODY_NONTERMINAL_2', 'ELIF_BLOCK']]
FUNC_BODY_NONTERMINAL_4 -> [['IF_HEADER', 'NEWLINE']]
FUNC_BODY_NONTERMINAL_5 -> [['FOR_HEADER', 'NEWLINE']]
FUNC_BODY_NONTERMINAL_6 -> [['FUNC_HEADER', 'NEWLINE']]
FUNC_BODY_NONTERMINAL_7 -> [['IMPORT', 'IMPORT_EXP']]
FUNC_BODY_NONTERMINAL_8 -> [['FROM', 'VAR']]
FUNC_BODY_NONTERMINAL_9 -> [['FUNC_BODY_NONTERMINAL_8', 'IMPORT']]
FUNC_BODY_NONTERMINAL_10 -> [['FUNC_BODY_NONTERMINAL_9', 'IMPORT_EXP']]
FUNC_BODY_NONTERMINAL_11 -> [['FROM', 'VAR']]
FUNC_BODY_NONTERMINAL_12 -> [['FUNC_BODY_NONTERMINAL_11', 'IMPORT']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_2 -> [['IF', 'BLOCK']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_3 -> [['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_2', 'ELIF_BLOCK']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_4 -> [['IF_HEADER', 'NEWLINE']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_5 -> [['FOR_HEADER', 'NEWLINE']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_6 -> [['FUNC_HEADER', 'NEWLINE']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_7 -> [['IMPORT', 'IMPORT_EXP']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_8 -> [['FROM', 'VAR']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_9 -> [['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_8', 'IMPORT']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_10 -> [['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_9', 'IMPORT_EXP']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_11 -> [['FROM', 'VAR']]
BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_12 -> [['BLOCK_PROGRAM_WITH_RETURN_NONTERMINAL_11', 'IMPORT']]
ARGS_NONTERMINAL_1 -> [['VAR', 'ASSIGN']]
ARGS_NONTERMINAL_2 -> [['VAR', 'COMMA']]
ARGS_NONTERMINAL_3 -> [['VAR', 'ASSIGN']]
ARGS_NONTERMINAL_4 -> [['ARGS_NONTERMINAL_3', 'OMNI_EXP']]
ARGS_NONTERMINAL_5 -> [['ARGS_NONTERMINAL_4', 'COMMA']]
ARGS_NONTERMINAL_6 -> [['VAR', 'DOT']]
CLASS_HEADER_NONTERMINAL_1 -> [['CLASS', 'VAR']]
CLASS_HEADER_NONTERMINAL_2 -> [['CLASS', 'VAR']]
CLASS_HEADER_NONTERMINAL_3 -> [['CLASS_HEADER_NONTERMINAL_2', 'OPEN_BRACKET']]
CLASS_HEADER_NONTERMINAL_4 -> [['CLASS_HEADER_NONTERMINAL_3', 'CLOSE_BRACKET']]
CLASS_HEADER_NONTERMINAL_5 -> [['CLASS', 'VAR']]
CLASS_HEADER_NONTERMINAL_6 -> [['CLASS_HEADER_NONTERMINAL_5', 'OPEN_BRACKET']]
CLASS_HEADER_NONTERMINAL_7 -> [['CLASS_HEADER_NONTERMINAL_6', 'MULTI_OMNI_EXP']]
CLASS_BODY_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
CLASS_BODY_NONTERMINAL_2 -> [['IF', 'BLOCK']]
CLASS_BODY_NONTERMINAL_3 -> [['CLASS_BODY_NONTERMINAL_2', 'ELIF_BLOCK']]
CLASS_BODY_NONTERMINAL_4 -> [['IF_HEADER', 'NEWLINE']]
CLASS_BODY_NONTERMINAL_5 -> [['FOR_HEADER', 'NEWLINE']]
CLASS_BODY_NONTERMINAL_6 -> [['FUNC_HEADER', 'NEWLINE']]
CLASS_BODY_NONTERMINAL_7 -> [['IMPORT', 'IMPORT_EXP']]
CLASS_BODY_NONTERMINAL_8 -> [['FROM', 'VAR']]
CLASS_BODY_NONTERMINAL_9 -> [['CLASS_BODY_NONTERMINAL_8', 'IMPORT']]
CLASS_BODY_NONTERMINAL_10 -> [['CLASS_BODY_NONTERMINAL_9', 'IMPORT_EXP']]
CLASS_BODY_NONTERMINAL_11 -> [['FROM', 'VAR']]
CLASS_BODY_NONTERMINAL_12 -> [['CLASS_BODY_NONTERMINAL_11', 'IMPORT']]
S_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
S_NONTERMINAL_2 -> [['IF', 'BLOCK']]
S_NONTERMINAL_3 -> [['S_NONTERMINAL_2', 'ELIF_BLOCK']]
S_NONTERMINAL_4 -> [['IF_HEADER', 'NEWLINE']]
S_NONTERMINAL_5 -> [['FOR_HEADER', 'NEWLINE']]
S_NONTERMINAL_6 -> [['FUNC_HEADER', 'NEWLINE']]
S_NONTERMINAL_7 -> [['IMPORT', 'IMPORT_EXP']]
S_NONTERMINAL_8 -> [['FROM', 'VAR']]
S_NONTERMINAL_9 -> [['S_NONTERMINAL_8', 'IMPORT']]
S_NONTERMINAL_10 -> [['S_NONTERMINAL_9', 'IMPORT_EXP']]
S_NONTERMINAL_11 -> [['FROM', 'VAR']]
S_NONTERMINAL_12 -> [['S_NONTERMINAL_11', 'IMPORT']]
BLOCK_PROGRAM_NONTERMINAL_1 -> [['RAISE', 'FUNCTION_NAME']]
BLOCK_PROGRAM_NONTERMINAL_2 -> [['IF', 'BLOCK']]
BLOCK_PROGRAM_NONTERMINAL_3 -> [['BLOCK_PROGRAM_NONTERMINAL_2', 'ELIF_BLOCK']]
BLOCK_PROGRAM_NONTERMINAL_4 -> [['IF_HEADER', 'NEWLINE']]
BLOCK_PROGRAM_NONTERMINAL_5 -> [['FOR_HEADER', 'NEWLINE']]
BLOCK_PROGRAM_NONTERMINAL_6 -> [['FUNC_HEADER', 'NEWLINE']]
BLOCK_PROGRAM_NONTERMINAL_7 -> [['IMPORT', 'IMPORT_EXP']]
BLOCK_PROGRAM_NONTERMINAL_8 -> [['FROM', 'VAR']]
BLOCK_PROGRAM_NONTERMINAL_9 -> [['BLOCK_PROGRAM_NONTERMINAL_8', 'IMPORT']]
BLOCK_PROGRAM_NONTERMINAL_10 -> [['BLOCK_PROGRAM_NONTERMINAL_9', 'IMPORT_EXP']]
BLOCK_PROGRAM_NONTERMINAL_11 -> [['FROM', 'VAR']]
BLOCK_PROGRAM_NONTERMINAL_12 -> [['BLOCK_PROGRAM_NONTERMINAL_11', 'IMPORT']]
